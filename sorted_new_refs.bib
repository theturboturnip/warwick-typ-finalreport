@article{IEEEFloat75419,
    author = {},
    doi = {10.1109/IEEESTD.2019.8766229},
    journal = {IEEE Std 754-2019 (Revision of IEEE 754-2008)},
    number = {},
    pages = {1-84},
    title = {IEEE Standard for Floating-Point Arithmetic},
    volume = {},
    year = {2019}
}

@article{LorensenMarching,
    abstract = {We present a new algorithm, called marching cubes, that creates triangle models of constant density surfaces from 3D medical data. Using a divide-and-conquer approach to generate inter-slice connectivity, we create a case table that defines triangle topology. The algorithm processes the 3D medical data in scan-line order and calculates triangle vertices using linear interpolation. We find the gradient of the original data, normalize it, and use it as a basis for shading the models. The detail in images produced from the generated surface models is the result of maintaining the inter-slice connectivity, surface data, and gradient information present in the original 3D data. Results from computed tomography (CT), magnetic resonance (MR), and single-photon emission computed tomography (SPECT) illustrate the quality and functionality of marching cubes. We also discuss improvements that decrease processing time and add solid modeling capabilities.},
    address = {New York, NY, USA},
    author = {Lorensen, William E. and Cline, Harvey E.},
    doi = {10.1145/37402.37422},
    issn = {0097-8930},
    issue_date = {July 1987},
    journal = {SIGGRAPH Comput. Graph.},
    month = {8},
    number = {4},
    numpages = {7},
    pages = {163–169},
    publisher = {Association for Computing Machinery},
    title = {Marching Cubes: A High Resolution 3D Surface Construction Algorithm},
    url = {https://doi.org/10.1145/37402.37422},
    volume = {21},
    year = {1987}
}

@article{Ueng1996,
    author = {Shyh-Kuang Ueng and Sikorski, C. and Kwan-Liu Ma},
    doi = {10.1109/2945.506222},
    journal = {IEEE Transactions on Visualization and Computer Graphics},
    number = {2},
    pages = {100-110},
    title = {Efficient streamline, streamribbon, and streamtube constructions on unstructured grids},
    volume = {2},
    year = {1996}
}

@article{vizRole2004,
    author = {K. {Gaither}},
    doi = {10.1109/MCG.2004.1297005},
    journal = {IEEE Computer Graphics and Applications},
    number = {3},
    pages = {13-15},
    title = {Visualization's role in analyzing computational fluid dynamics data},
    volume = {24},
    year = {2004}
}

@book{learnyouahaskell,
    author = {Lipova{\v{c}}a, M.},
    isbn = {9781593272838},
    lccn = {2011000790},
    publisher = {No Starch Press},
    series = {No Starch Press Series},
    title = {Learn You a Haskell for Great Good!: A Beginner's Guide},
    url = {https://books.google.co.uk/books?id=R2RbBAAAQBAJ},
    year = {2011}
}

@book{VTKBook,
    abstract = {From the Publisher:Visualization is a part of every day life. From weather map generation of financial modelling to MRI technology in medicine to 3D graphics used in movies like Jurassic Park, examples of visualization abound. The book/CD package offers readers the opportunity to practice visualization using a complete C++ programming environment developed by the authors.},
    address = {USA},
    author = {Schroeder, William and Lorenson, Bill},
    edition = {1st},
    isbn = {0131998374},
    publisher = {Prentice Hall PTR},
    title = {Visualization Toolkit: An Object-Oriented Approach to 3-D Graphics},
    year = {1996}
}

@inproceedings{10.1145/37401.37422,
    abstract = {We present a new algorithm, called marching cubes, that creates triangle models of constant density surfaces from 3D medical data. Using a divide-and-conquer approach to generate inter-slice connectivity, we create a case table that defines triangle topology. The algorithm processes the 3D medical data in scan-line order and calculates triangle vertices using linear interpolation. We find the gradient of the original data, normalize it, and use it as a basis for shading the models. The detail in images produced from the generated surface models is the result of maintaining the inter-slice connectivity, surface data, and gradient information present in the original 3D data. Results from computed tomography (CT), magnetic resonance (MR), and single-photon emission computed tomography (SPECT) illustrate the quality and functionality of marching cubes. We also discuss improvements that decrease processing time and add solid modeling capabilities.},
    address = {New York, NY, USA},
    author = {Lorensen, William E. and Cline, Harvey E.},
    booktitle = {Proceedings of the 14th Annual Conference on Computer Graphics and Interactive Techniques},
    doi = {10.1145/37401.37422},
    isbn = {0897912276},
    numpages = {7},
    pages = {163–169},
    publisher = {Association for Computing Machinery},
    series = {SIGGRAPH '87},
    title = {Marching Cubes: A High Resolution 3D Surface Construction Algorithm},
    url = {https://doi.org/10.1145/37401.37422},
    year = {1987}
}

@inproceedings{Chen16,
    author = {Chen, Lei and Yu, Jing and Ditta, Allah and Xiao, Chuangbai and Li, Xueliang and Wang, Zhenli},
    booktitle = {2016 22nd International Conference on Automation and Computing (ICAC)},
    doi = {10.1109/IConAC.2016.7604964},
    number = {},
    pages = {467-472},
    title = {A new seismic data visualization method},
    volume = {},
    year = {2016}
}

@inproceedings{Lane93,
    author = {Lane, D.A.},
    booktitle = {Proceedings Visualization '93},
    doi = {10.1109/VISUAL.1993.398848},
    number = {},
    pages = {32-38},
    title = {Visualization of time-dependent flow fields},
    volume = {},
    year = {1993}
}

@inproceedings{Schulz1999,
    author = {Schulz, M. and Reck, F. and Bertelheimer, W. and Ertl, T.},
    booktitle = {Proceedings Visualization '99 (Cat. No.99CB37067)},
    doi = {10.1109/VISUAL.1999.809918},
    number = {},
    pages = {413-553},
    title = {Interactive visualization of fluid dynamics simulations in locally refined cartesian grids},
    volume = {},
    year = {1999}
}

@manual{AutodeskCFDManual,
    author = {Autodesk},
    title = {Autodesk {CFD} 2019},
    url = {https://help.autodesk.com/view/SCDSE/2019/ENU/},
    year = {2019}
}

@manual{TheKhronosGroupVulkanSpec,
    organization = {{The Khronos Group}},
    title = {{Vulkan® 1.1.176 - A Specification}},
    url = {https://www.khronos.org/registry/vulkan/specs/1.1/html/vkspec.html},
    year = {2021}
}

@misc{AutodeskAcquiresALGOR,
    month = {12},
    organization = {{MCADCafe}},
    title = {Autodesk Acquires {ALGOR}},
    url = {https://www.mcadcafe.com/nbc/articles/view_article.php?section=Magazine&articleid=637593},
    year = {2008}
}

@online{AutodeskCFDExercise7,
    author = {Autodesk},
    title = {Exercise 7 | CFD},
    url = {https://knowledge.autodesk.com/support/cfd/learn-explore/caas/CloudHelp/cloudhelp/2014/ENU/SimCFD/files/GUID-ADAF2C66-9992-43FA-B5FB-5CB13F967DAD-htm.html},
    year = {2019}
}

@online{cpprefMoveConstructor,
    organization = {cppreference.com},
    title = {{Move constructors}},
    url = {https://en.cppreference.com/w/cpp/language/move_constructor}
}

@online{GrayCUDAGraph2019Blog,
    author = {Gray, Alan},
    month = {9},
    organization = {NVIDIA},
    title = {{Getting Started with CUDA Graphs | NVIDIA Developer Blog}},
    url = {https://developer.nvidia.com/blog/cuda-graphs/},
    year = {2019}
}

@online{MaisterVulkanSyncBlog,
    month = {8},
    organization = {Maister's Graphics Adventures},
    title = {Yet another blog explaining Vulkan synchronization},
    url = {https://themaister.net/blog/2019/08/14/yet-another-blog-explaining-vulkan-synchronization/},
    year = {2019}
}

@online{NvccFmad,
    note = {\todomark{SHould this be a manual?}},
    organization = {Nvidia},
    title = {fmad | NVCC :: CUDA Toolkit Documentation},
    url = {https://docs.nvidia.com/cuda/cuda-compiler-driver-nvcc/index.html#options-for-steering-gpu-code-generation-fmad},
    version = {v11.3.0},
    year = {2021}
}

@online{NvidiaComputeSanitizerRelease,
    month = {3},
    organization = {Nvidia},
    title = {Compute Sanitizer - Release Notes},
    url = {https://docs.nvidia.com/cuda/sanitizer-docs/pdf/ReleaseNotes.pdf},
    version = {v2021.1.0},
    year = {2021}
}

@online{NvidiaCudaMemcheckIssues,
    note = {\todomark{SHould this be a manual?}},
    organization = {Nvidia},
    title = {Known Issues | CUDA-MEMCHECK :: CUDA Toolkit Documentation},
    url = {https://docs.nvidia.com/cuda/cuda-memcheck/index.html#known-issues},
    version = {v11.3.0},
    year = {2021}
}

@online{NvidiaFMAJustification,
    note = {\todomark{SHould this be a manual?}},
    organization = {Nvidia},
    title = {Floating Point and IEEE 754 :: CUDA Toolkit Documentation},
    url = {https://docs.nvidia.com/cuda/floating-point/index.html#fused-multiply-add-fma},
    version = {v11.3.0},
    year = {2021}
}

@online{NvidiaPTX,
    note = {\todomark{SHould this be a manual?}},
    organization = {Nvidia},
    title = {PTX ISA :: CUDA Toolkit Documentation},
    url = {https://docs.nvidia.com/cuda/parallel-thread-execution/index.html},
    version = {v11.3.0},
    year = {2021}
}

@online{NvidiaCUDASIMD,
    url = {https://docs.nvidia.com/cuda/cuda-math-api/group__CUDA__MATH__INTRINSIC__SIMD.html},
    title={SIMD Intrinsics | CUDA Math API :: CUDA Toolkit Documentation},
    organization = {Nvidia},
    version = {v11.3.0},
    year = {2021}
}

@online{ValgrindProblemsBlog,
    author = {Gebarowski, Tomasz},
    day = {21},
    month = {8},
    title = {{Glib, GObject and memory leaks}},
    url = {https://tgebarowski.github.io/2008/08/21/glib-gobject-and-memory-leaks/},
    year = {2008}
}

@online{video:MetOfficeTenDayTrend,
    day = {3},
    month = {3},
    organization = {Met Office - Weather},
    title = {{10 Day Trend – Big changes ahead 03/03/21}},
    url = {https://www.youtube.com/watch?v=y_1--MkiNjQ},
    year = {2021}
}

@online{WickedEngineParticles,
    author = {{Turanszkij}},
    month = {11},
    organization = {wickedengine.net},
    title = {GPU-based particle simulation},
    url = {https://wickedengine.net/2017/11/07/gpu-based-particle-simulation/},
    year = {2017}
}

@phdthesis{Lindqvist_2018,
    author = {Lindqvist, Sebastian},
    school = {Blekinge Institute of Technology, Faculty of Computing},
    title = {Performance Evaluation of Boids on the GPU and CPU},
    url = {http://urn.kb.se/resolve?urn=urn:nbn:se:bth-15970},
    year = {2018}
}

@techreport{nvidia1080Whitepaper,
    organization = {Nvidia},
    title = {NVIDIA GeForce GTX 1080},
    url = {https://international.download.nvidia.com/geforce-com/international/pdfs/GeForce_GTX_1080_Whitepaper_FINAL.pdf},
    urldate = {2021-04-23},
    year = {2016}
}

@techreport{nvidiaAmpereWhitepaper,
    organization = {Nvidia},
    title = {NVIDIA AMPERE GA102 GPU ARCHITECTURE},
    url = {https://www.nvidia.com/content/dam/en-zz/Solutions/geforce/ampere/pdf/NVIDIA-ampere-GA102-GPU-Architecture-Whitepaper-V1.pdf},
    urldate = {2021-02-22},
    year = {2020}
}

@unpublished{kress2017situ,
    author = {Kress, James},
    title = {In Situ Visualization Techniques for High Performance Computing},
    url = {www.cs.uoregon.edu/Reports/AREA-201703-Kress.pdf},
    urldate = {2021-03-06},
    year = {2017}
}

@unpublished{presentation:RuntimePolymorphism,
    author = {Dionne, Louis},
    month = {11},
    note = {CppCon 2017},
    title = {{Runtime Polymorphism: Back to the Basics}},
    url = {https://www.youtube.com/watch?v=gVGtNFg4ay0},
    year = {2017}
}

@online{VTKWebpage,
    title = {{VTK - The Visualization Toolkit}},
    organization={{Kitware, Inc.}},
    url={https://vtk.org/},
    urldate={2021-05-01}
}

@online{ParaViewWebpage,
    title = {{ParaView}},
    organization={{Kitware, Inc.}},
    url={https://www.paraview.org/},
    urldate={2021-05-01}
}

@online{VisItWebpage,
    title = {{VisIt}},
    organization = {{Weapons and Complex Integration}},
    url={https://wci.llnl.gov/simulation/computer-codes/visit},
    urldate={2021-05-01}
}

@online{AutodeskCFDWebpage,
    title={{Autodesk CFD | Computational Fluid Dynamics Simulation Software}},
    organization={{Autodesk, Inc.}},
    url={https://www.autodesk.com/products/cfd/overview},
    urldate={2021-05-01}
}

@online{LevelsOfTesting,
    title={{Levels of Testing}},
    organization={{ReQTest}},
    url={https://reqtest.com/testing-blog/different-levels-of-testing/},
    urldate={2021-05-01}
}

@online{NvidiaCudaOccupancyCalc,
title={{CUDA Occupancy Calculator}},
organization={{NVIDIA}},
    url={https://docs.nvidia.com/cuda/cuda-occupancy-calculator/index.html},
    urldate={2021-05-01}
}

@online{UnityGPUBoids,
    title={Unity-GPU-Boids},
    author={Monnerat, Raphael},
    url={https://github.com/Shinao/Unity-GPU-Boids},
    urldate={2021-05-01}
}

@online{SaschaWillemsVulkan,
    title={{Vulkan C++ examples and demos}},
    author={Willems, Sascha},
    url={https://github.com/SaschaWillems/Vulkan},
    urldate={2021-05-01}
}

@online{GPUOpenVMA,
    title={Vulkan Memory Allocator},
    organization={{GPUOpen}},
    url={https://gpuopen.com/vulkan-memory-allocator/},
    urldate={2021-05-01}
}

@online{Datoviz,
    title={Datoviz: {GPU} interactive scientific data visualization with Vulkan},
    author={Rossant, Cyrille},
    url={https://github.com/datoviz/datoviz},
    urldate={2021-05-01}
}